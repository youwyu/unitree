<launch>
    <!-- For the testing safety, do dryrun by default -->
    <arg name="dryrun" default="true"/>
    <arg name="robot_namespace" default="a112138"/>
    <arg name="udp_duration" default="0.01"/>
    <arg name="cmd_check" default="true"/>
    <arg name="ctrl_level" default="low"/>
    <arg name="position_protect_limit" default="0.00"/>
    <arg name="power_protect_level" default="8"/>
    <arg name="output" default="screen"/>
    <arg name="func" default="full"/>
    <arg name="publish_imu" default="false"/>
    <arg name="start_stand" default="false"/>
    <arg name="publish_joint_state" default="false"/>
    <arg name="joint_state_freq" default="100.0"/>
    <arg name="publish_wirelessRemote" default="false"/>
    <arg name="cmd_lost_timelimit" default= "0.05"/>
    <arg name="freeze_lost" default="false"/>
    <arg name="torque_protect_limit" default="35"/>
    <arg name="torque_protect_limit_calf" default="38"/>
    <arg name="pitch_protect_limit" default="1.5"/>
    <arg name="roll_protect_limit" default="1.3"/>
    <arg name="R2_press_protect" default="true"/>
    <!-- camera configurations, only when func:=full and camera_mode!=none -->
    <arg name="camera_mode" default="none"/>
    <arg name="image_fps" default="30"/>
    <arg name="image_width" default="640"/>
    <arg name="image_height" default="480"/>
    <arg name="depth_filter" default="spatial,temporal,hole_filling"/>

    <group if="$(eval arg('func') == 'full')">
        <node name="$(arg robot_namespace)" pkg="unitree_legged_real" type="real_robot" output="$(arg output)" args="$(arg robot_namespace)">
            <param name="dryrun" type="bool" value="$(arg dryrun)"/>
            <param name="udp_duration" type="double" value="$(arg udp_duration)"/>
            <param name="cmd_check" type="bool" value="$(arg cmd_check)"/>
            <param name="ctrl_level" type="str" value="$(arg ctrl_level)"/>
            <param name="position_protect_limit" type="double" value="$(arg position_protect_limit)"/>
            <param name="power_protect_level" type="int" value="$(arg power_protect_level)"/>
            <param name="publish_imu" type="bool" value="$(arg publish_imu)"/>
            <param name="start_stand" type="bool" value="$(arg start_stand)"/>
            <param name="publish_joint_state" type="bool" value="$(arg publish_joint_state)"/>
            <param name="publish_wirelessRemote" type="bool" value="$(arg publish_wirelessRemote)"/>
            <param name="cmd_lost_timelimit" type="double" value="$(arg cmd_lost_timelimit)"/>
            <param name="freeze_lost" type="bool" value="$(arg freeze_lost)"/>
            <param name="torque_protect_limit" type="double" value="$(arg torque_protect_limit)"/>
            <param name="torque_protect_limit_calf" type="double" value="$(arg torque_protect_limit_calf)"/>
            <param name="pitch_protect_limit" type="double" value="$(arg pitch_protect_limit)"/>
            <param name="roll_protect_limit" type="double" value="$(arg roll_protect_limit)"/>
            <param name="R2_press_protect" type="bool" value="$(arg R2_press_protect)"/>
        </node>

        <group if="$(eval arg('publish_joint_state'))">
            <include file="$(find go1_description)/launch/go1_state.launch">
                <arg name="robot_namespace" value="$(arg robot_namespace)"/>
                <arg name="publish_frequency" value="$(arg joint_state_freq)"/>
            </include>
        </group>

        <include file="$(find unitree_legged_real)/launch/camera.launch" if="$(eval arg('camera_mode') != 'none')">
            <arg name="robot_namespace" value="$(arg robot_namespace)"/>
            <arg name="camera_mode" value="$(arg camera_mode)"/>
            <arg name="image_fps" value="$(arg image_fps)"/>
            <arg name="image_width" value="$(arg image_width)"/>
            <arg name="image_height" value="$(arg image_height)"/>
            <arg name="filter" value="$(arg depth_filter)"/>
        </include>
    </group>

    <group if="$(eval arg('func') == 'basic')">
        <node name="$(arg robot_namespace)" pkg="unitree_legged_real" type="ros_udp_node" output="$(arg output)" args="$(arg robot_namespace)">
            <param name="dryrun" type="bool" value="$(arg dryrun)"/>
            <param name="udp_duration" type="double" value="$(arg udp_duration)"/>
            <param name="cmd_check" type="bool" value="$(arg cmd_check)"/>
            <param name="ctrl_level" type="str" value="$(arg ctrl_level)"/>
            <param name="position_protect_limit" type="double" value="$(arg position_protect_limit)"/>
            <param name="power_protect_level" type="int" value="$(arg power_protect_level)"/>
            <param name="start_stand" type="bool" value="$(arg start_stand)"/>
            <param name="freeze_lost" type="bool" value="$(arg freeze_lost)"/>
            <param name="torque_protect_limit" type="double" value="$(arg torque_protect_limit)"/>
            <param name="pitch_protect_limit" type="double" value="$(arg pitch_protect_limit)"/>
            <param name="roll_protect_limit" type="double" value="$(arg roll_protect_limit)"/>
            <param name="R2_press_protect" type="bool" value="$(arg R2_press_protect)"/>
        </node>
    </group>
</launch>
